name: Build, Lint, Tests

on:
  push:
    branches-ignore: ["main"]

#env:
#  PYTHON_VERSION: '3.11.9'
#  POETRY_VERSION: '1.7.1'
#  AWS_REGION: eu-west-2
#  SENTRY_TRACES_SAMPLE_RATE: 1.0
#  SENTRY_PROFILES_SAMPLE_RATE: 0.5
#  SENTRY_SAMPLE_RATE: 50
#  USERNAME: foo@example.com
#  SERVICE_NAME: user-service
#  LOG_LEVEL: DEBUG
#  ENVIRONMENT: test
#  APP_HOST: localhost
#  UVICORN_PORT: 8002
#  JWT_SECRET: ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
#  JWT_EXPIRY_SECONDS: 3600
#  QUEUE_PROTOCOL: PLAINTEXT
#  QUEUE_HOST: localhost
#  QUEUE_PORTS: 9092,9093,9094
#  QUEUE_ACKS: all
#  QUEUE_POLL_WAIT_SECONDS: 1
#  QUEUE_TOPIC_NAME: email-topic
#  QUEUE_GROUP_ID: email-topic-group
#  EMAIL_ACCOUNT_VERIFICATION_TYPE: ACCOUNT_VERIFICATION
#  ALB_URL: http://localhost
#  AUTH_SERVICE_URL: http://localhost:8001
#  DB_HOST: localhost
#  DB_PORT: 5432
#  DB_USERNAME: postgres
#  DB_PASSWORD: postgres
#  DB_NAME: users
#  JWT_SECRET_VERIFY_ACCOUNT: ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789ABC
#  JWT_EXPIRY_SECONDS_VERIFY_ACCOUNT: 3600

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: build
        uses: ./.github/workflows/actions.yml

  check-version:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Run version check script
        env:
          REPO: ${{ github.repository }}
        run: |
          latest_release_version=$(curl -s https://api.github.com/repos/$REPO/releases/latest | jq -r .tag_name)
          echo "Latest release: $latest_release_version"
          make check-version RELEASE_VERSION=$latest_release_version
          app_version=$(poetry run python scripts/app_version.py)
          echo "App version: $app_version"

  lint:
    runs-on: ubuntu-latest
    needs: [ build, check-version ]
    steps:
      - name: Run lint
        run: make lint

  unit-tests:
    runs-on: ubuntu-latest
    needs: [ build, lint ]

    steps:
      - name: Run unit tests
        run: make test-unit

  integration-tests:
    runs-on: ubuntu-latest
    needs: [ build, lint ]

    steps:
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Setup dependencies
        run: docker compose -f docker-compose.yml up -d

      - name: Sleep for 10s
        uses: juliangruber/sleep-action@v2.0.0
        with:
          time: 5s

      - name: Docker running containers
        run: docker ps -a

      - name: Curl Authentication Service Health Check
        run: curl http://localhost:8001/healthz

      - name: Run integration tests
        run: make migrations && make test-integration
