# Default values for authentication-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

postgresql:
  auth:
    username: postgres
    postgresPassword: postgres
    database: users

kafka:
#  initContainers:
#    - name: kafka-broker-1
#      image: confluentinc/cp-kafka:7.8.0.arm64
#      imagePullPolicy: Always
#      ports:
#        - name: kafka-broker-1
#          containerPort: 9092
#        - name: broker-2
#          containerPort: "9093:9093"
#        - name: broker-3
#          containerPort: "9094:9094"
#  provisioning:
#    enabled: true
##    numPartitions: 1
##    replicationFactor: 1
#    topics:
#      - name: "email-topic"
#        config:
#          max.message.bytes: 64000
#          flush.messages: 1
  listeners:
    ## @param listeners.client.name Name for the Kafka client listener
    ## @param listeners.client.containerPort Port for the Kafka client listener
    ## @param listeners.client.protocol Security protocol for the Kafka client listener. Allowed values are 'PLAINTEXT', 'SASL_PLAINTEXT', 'SASL_SSL' and 'SSL'
    ## @param listeners.client.sslClientAuth Optional. If SASL_SSL is enabled, configure mTLS TLS authentication type. If SSL protocol is enabled, overrides tls.authType for this listener. Allowed values are 'none', 'requested' and 'required'
    client:
      containerPort: 9092
      protocol: PLAINTEXT
      name: CLIENT
#  broker:
#    initContainers: []
#  zookeeper:
#    containerPorts:

app:
  name: "ct-iot"

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 2

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ct-iot-user-service
  # This sets the pull policy for images.
  pullPolicy: Never
  # Overrides the image tag whose default is the chart appVersion.
  tag: "dev"
  # Overrides environment variables
  env:
    sentryTracesSampleRate: 1.0
    sentryProfilesSampleRate: 0.5
    sentrySampleRate: 50
    environment: test
    logLevel: DEBUG
    serviceName: user-service
    uvicornPort: 8002
    queueProtocol: PLAINTEXT
    queueHost: user-service-kafka
    queuePorts: 9092,9093,9094
    queueAcks: all
    queuePollWaitSeconds: 1
    queueTopicName: email-topic
    queueGroupId: email-topic-group
    albUrl: http://localhost
    authServiceUrl: http://authentication-service:8001

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8002

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: user-service.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /healthz
    port: 8002
  initialDelaySeconds: 10
readinessProbe:
  httpGet:
    path: /healthz
    port: 8002
  initialDelaySeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
